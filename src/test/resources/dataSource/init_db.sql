-- MySQL Script generated by MySQL Workbench
-- Sun Jul 12 22:36:50 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Schema test_db
-- -----------------------------------------------------
/*CREATE SCHEMA test_db AUTHORIZATION DBA*/

-- -----------------------------------------------------
-- Table test_db.operation
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."operation"
(
    id             BIGINT         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    operation_type VARCHAR(20),
    operation_cost DECIMAL(12, 2) NOT NULL,
    operation_time DOUBLE         NOT NULL,
    PRIMARY KEY (id)
);

-- -----------------------------------------------------
-- Table test_db.customer
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."customer"
(
    id            BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    customer_name VARCHAR(20),
    PRIMARY KEY (id)
);

-- -----------------------------------------------------
-- Table test_db.material
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."material"
(
    id                     BIGINT         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    material_name          VARCHAR(20),
    material_cost          DECIMAL(12, 2) NOT NULL,
    material_delivery_time DOUBLE         NOT NULL,
    PRIMARY KEY (id)
);

-- -----------------------------------------------------
-- Table test_db.technological_process
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."technological_process"
(
    id                         BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    technological_process_name VARCHAR(20),
    PRIMARY KEY (id)
);

-- -----------------------------------------------------
-- Table test_db.progress
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."progress"
(
    id              BIGINT       NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    progress_status INT          NOT NULL,
    progress_log    VARCHAR(200) NOT NULL,
    PRIMARY KEY (id)
);

-- -----------------------------------------------------
-- Table test_db.operations_order
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."operations_order"
(
    id                       BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    technological_process_id BIGINT NOT NULL,
    operation_id             BIGINT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_technological_process_has_process_technological_process1
        FOREIGN KEY (technological_process_id)
            REFERENCES test_db."technological_process" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION,
    CONSTRAINT fk_technological_process_has_process_process1
        FOREIGN KEY (operation_id)
            REFERENCES test_db."operation" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- Table test_db.product
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."product"
(
    id                       BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    product_name             VARCHAR(20),
    product_weight           DOUBLE NOT NULL,
    material_id              BIGINT NOT NULL,
    technological_process_id BIGINT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_product_material1
        FOREIGN KEY (material_id)
            REFERENCES test_db."material" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION,
    CONSTRAINT fk_product_technological_process1
        FOREIGN KEY (technological_process_id)
            REFERENCES test_db."technological_process" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- Table test_db.wallet
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."wallet"
(
    id             BIGINT         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    wallet_balance DECIMAL(13, 2) NOT NULL,
    PRIMARY KEY (id)
);

-- -----------------------------------------------------
-- Table test_db.user_role
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."user_role"
(
    id        BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    role_name VARCHAR(20),
    PRIMARY KEY (id)
);

-- -----------------------------------------------------
-- Table test_db.user_account
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."user_account"
(
    id            BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_name     VARCHAR(100),
    user_password VARCHAR(100),
    user_email    VARCHAR(100),
    is_active     BOOLEAN,
    wallet_id     BIGINT NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_user_account_wallet1
        FOREIGN KEY (wallet_id)
            REFERENCES test_db."wallet" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- Table test_db.account_role
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."account_role"
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_account_id BIGINT                                  NOT NULL,
    user_role_id    BIGINT                                  NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_user_account_has_user_role_user_account1
        FOREIGN KEY (user_account_id)
            REFERENCES test_db."user_account" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION,
    CONSTRAINT fk_user_account_has_user_role_user_role1
        FOREIGN KEY (user_role_id)
            REFERENCES test_db."user_role" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION
);

-- -----------------------------------------------------
-- Table test_db.contract
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS test_db."contract"
(
    id                        BIGINT         NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_account_id           BIGINT         NOT NULL,
    customer_id               BIGINT         NOT NULL,
    product_id                BIGINT         NOT NULL,
    contract_product_quantity INT            NOT NULL,
    contract_price            DECIMAL(12, 2) NOT NULL,
    contract_status           VARCHAR(20),
    contract_payment_date     DATETIME       NOT NULL,
    contract_completion_date  DATETIME       NOT NULL,
    progress_progress_id      BIGINT         NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT fk_contract_customer1
        FOREIGN KEY (customer_id)
            REFERENCES test_db."customer" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION,
    CONSTRAINT fk_order_progress1
        FOREIGN KEY (progress_progress_id)
            REFERENCES test_db."progress" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION,
    CONSTRAINT fk_contract_user_account1
        FOREIGN KEY (user_account_id)
            REFERENCES test_db."user_account" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION,
    CONSTRAINT fk_contract_product1
        FOREIGN KEY (product_id)
            REFERENCES test_db."product" (id)
            ON DELETE CASCADE
            ON UPDATE NO ACTION
);


-- -----------------------------------------------------
-- Data base filling
-- -----------------------------------------------------
/*

insert into test_db."wallet"
values (0, 12250);
insert into test_db."wallet"
values (1, 5000);
insert into test_db."wallet"
values (2, 1200);

insert into test_db."user_role"
values (1, 'CEO');
insert into test_db."user_role"
values (2, 'Customer');

insert into test_db."user_account"
values (1, 'Kirill', 'dc41a642e730da71b359b67a99989fb0', 'Kirill@gmail.com', true, 1);
insert into test_db."user_account"
values (2, 'Vladimir', '1a09554a01c24fd6c63e0ccaf3892dcf', 'vladimir@gmail.com', true, 2);
insert into test_db."user_account"
values (3, 'Kate', 'bca32062a89dba8eb1651a4f0ce1b7f0', 'kate@gmail.com', true, 3);

insert into test_db."account_role"
values (1, 1, 1);
insert into test_db."account_role"
values (2, 2, 2);
insert into test_db."account_role"
values (3, 3, 2);

insert into test_db."customer"
values (1, 'Siemens');
insert into test_db."customer"
values (2, 'Daimler');

insert into test_db."material"
values (1, '34Cr4', 0.62, 1);
insert into test_db."material"
values (2, '41Cr4', 0.66, 1);
insert into test_db."material"
values (3, '20Mn5', 0.50, 1);
insert into test_db."material"
values (4, 'Cr45E', 0.6, 0.5);
insert into test_db."material"
values (5, '25CrMo4', 0.72, 0.5);
insert into test_db."material"
values (6, 'X12CrMo5', 0.86, 0.5);
insert into test_db."material"
values (7, '80W2', 1.52, 0.6);

insert into test_db."technological_process" (technological_process_name)
values ('CRHG');
insert into test_db."technological_process" (technological_process_name)
values ('CSMHG');

insert into test_db."product"
values (1, 'R2314_shaft', 5.4, 3, 0);
insert into test_db."product"
values (2, 'R231423_shaft', 3.8, 3, 1);

insert into test_db."operation"
values (1, 'CUTTING', 0.16, 0.02);
insert into test_db."operation"
values (2, 'ROLLING', 0.05, 0.001);
insert into test_db."operation"
values (3, 'STAMPING', 0.08, 0.002);
insert into test_db."operation"
values (4, 'MILLING', 0.3, 0.04);
insert into test_db."operation"
values (5, 'GRINDING', 0.5, 0.07);
insert into test_db."operation"
values (6, 'TURNING', 0.3, 0.03);
insert into test_db."operation"
values (7, 'HARDENING', 0.4, 0.14);

insert into test_db."progress"
values (1, 0, 'not payed');
insert into test_db."progress"
values (2, 0, 'not payed');
insert into test_db."progress"
values (3, 0, 'not payed');

insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('0', '1');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('0', '2');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('0', '5');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('0', '7');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('1', '1');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('1', '3');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('1', '4');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('1', '7');
insert into test_db."operations_order" (technological_process_id, operation_id)
VALUES ('1', '5');*/
